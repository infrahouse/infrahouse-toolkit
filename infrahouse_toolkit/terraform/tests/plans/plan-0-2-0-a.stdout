data.aws_internet_gateway.management: Reading...
data.aws_subnets.management_public: Reading...
module.website.aws_acm_certificate_validation.website: Refreshing state... [id=2023-11-25 21:20:23.244 +0000 UTC]
data.aws_internet_gateway.management: Read complete after 0s [id=igw-079090e09ed5db582]
data.aws_subnets.management_public: Read complete after 1s [id=***]
module.website.data.aws_subnet.selected: Reading...
data.aws_subnets.management_private: Read complete after 1s [id=***]
module.website.data.aws_subnet.selected: Read complete after 0s [id=subnet-04b8845d896c6ebde]
module.website.data.aws_vpc.service: Reading...
module.website.aws_alb_target_group.website: Refreshing state... [id=arn:aws:elasticloadbalancing:***:493370826424:targetgroup/tf-20240913200526502500000002/0d4217fd67c51e93]
module.website.aws_security_group.alb: Refreshing state... [id=sg-0aaa0278bbf94c018]
module.website.aws_security_group.backend: Refreshing state... [id=sg-05ab687beea618e2e]
module.website.aws_vpc_security_group_egress_rule.backend_outgoing: Refreshing state... [id=sgr-09f79efe51867672c]
module.website.aws_vpc_security_group_ingress_rule.backend_icmp: Refreshing state... [id=sgr-0bfb25b6a5ca3ca87]
module.website.aws_vpc_security_group_ingress_rule.alb_listener_port: Refreshing state... [id=sgr-044cfc86fcc67ee3f]
module.website.aws_vpc_security_group_ingress_rule.backend_user_traffic: Refreshing state... [id=sgr-03c2b8531c8a005d2]
module.website.aws_vpc_security_group_egress_rule.alb_outgoing: Refreshing state... [id=sgr-0d30d6983d5737351]
module.website.aws_vpc_security_group_ingress_rule.alb_icmp: Refreshing state... [id=sgr-01b1d990f992e6670]
module.website.aws_launch_template.website: Refreshing state... [id=lt-042ea5dd55b0fff3b]
module.website.aws_vpc_security_group_ingress_rule.https: Refreshing state... [id=sgr-0aa014d186056e593]
module.website.aws_s3_bucket_public_access_block.public_access[0]: Refreshing state... [id=web-access-log-20240930132736922900000001]
module.website.data.aws_iam_policy_document.access_logs[0]: Reading...
module.website.data.aws_iam_policy_document.access_logs[0]: Read complete after 0s [id=317435744]
module.website.aws_s3_bucket_policy.access_logs[0]: Refreshing state... [id=web-access-log-20240930132736922900000001]
module.website.aws_alb.website: Refreshing state... [id=arn:aws:elasticloadbalancing:***:493370826424:loadbalancer/app/web20240913214119018400000001/899a5c5d81f7169f]
module.website.data.aws_vpc.service: Read complete after 0s [id=vpc-08e19d859c26d18b2]
module.website.aws_vpc_security_group_ingress_rule.backend_ssh_local: Refreshing state... [id=sgr-0d5434ec89798da6b]
module.website.aws_autoscaling_group.website: Refreshing state... [id=web20231125205239428700000003]
module.website.aws_alb_listener.redirect_to_ssl: Refreshing state... [id=arn:aws:elasticloadbalancing:***:493370826424:listener/app/web20240913214119018400000001/899a5c5d81f7169f/ebf3e5876c88a643]
module.website.aws_lb_listener.ssl: Refreshing state... [id=arn:aws:elasticloadbalancing:***:493370826424:listener/app/web20240913214119018400000001/899a5c5d81f7169f/bbb1d36949612f14]
module.website.aws_route53_record.extra[0]: Refreshing state... [id=Z07662251LH3YRF2ERM3G_infrahouse.com_A]
module.website.aws_autoscaling_policy.cpu_load: Refreshing state... [id=web20231125205239428700000003]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  ~ update in-place

Terraform will perform the following actions:

  # module.website.aws_autoscaling_group.website will be updated in-place
  ~ resource "aws_autoscaling_group" "website" {
        id                               = "web20231125205239428700000003"
        name                             = "web20231125205239428700000003"
        # (32 unchanged attributes hidden)

      ~ launch_template {
            id      = "lt-042ea5dd55b0fff3b"
            name    = "web20231125205151213200000001"
          ~ version = "8" -> (known after apply)
        }

        # (9 unchanged blocks hidden)
    }

  # module.website.aws_launch_template.website will be updated in-place
  ~ resource "aws_launch_template" "website" {
        id                                   = "lt-042ea5dd55b0fff3b"
      ~ latest_version                       = 8 -> (known after apply)
        name                                 = "web20231125205151213200000001"
        tags                                 = {}
      ~ user_data                            = "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSJNSU1FQk9VTkRBUlkiCk1JTUUtVmVyc2lvbjogMS4wDQoNCi0tTUlNRUJPVU5EQVJZDQpDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0DQpDb250ZW50LVR5cGU6IHRleHQvY2xvdWQtY29uZmlnDQpNaW1lLVZlcnNpb246IDEuMA0KDQojY2xvdWQtY29uZmlnCiJhcHQiOgogICJzb3VyY2VzIjoKICAgICJpbmZyYWhvdXNlIjoKICAgICAgImtleSI6IHwKICAgICAgICAtLS0tLUJFR0lOIFBHUCBQVUJMSUMgS0VZIEJMT0NLLS0tLS0KCiAgICAgICAgbVFJTkJHUzdGdGtCRUFERitZbURnNlF2c3Y1VjZaUXcrUWh4ZFR2ak1YZUxDOVQ2UkZSVkQ5NDdxS3p0Tk5RbgogICAgICAgICtBL3l4cHJMQW1XMjVVdS8xMW9Dc3pOVklJYVIzT1k4TXR5aWxiQ3R6VWtCenZXZGxYM0h2VHc5MUxwOGJ4VUwKICAgICAgICBFWE9NOW5zY3FPck92ZkJqYW5wbEtERUtQTVk2dklaM2twMXJVc0NOR0xCTDB4MktaZ1U4MHVsUnNNTThxbkJOCiAgICAgICAga3BUaUFlWEtPRVZ0UnpsV2x2T0ZMSjdwWUR2YVowVWdIU1Z1RStaa2xkcU9kTExScEtrZEl2SlBja1hxTDV4VAogICAgICAgIFV2V1RXMWVuRkFIZDUrTlF4TW5DYTNpa2pRVjNEVGxFanNnTExRYmJ5c1hqWFByNlBJUHMyOWNUY2ZvcTQzMU8KICAgICAgICB0UjREclpCNHZNRU9BODhUbUtCa0VpTUcraUI5Y2p6NXdCSXVNdTk1Wm1vSnhkdmpQUjcyRllLZ3JDWE50TmhkCiAgICAgICAgVmVyRVJ2cExUaGRhUm1aZ2k3bHkrRHZrWTdMcXlKUHZkSGNxeGVkZ0ZuUEtSNFQrZ1NRbWJVUGQ5cXFkSlIwUQogICAgICAgIEtsL1BtdHVTL3c5Z3kyWjRheTBRSUtyTkJ6UXhoQThMRFpwcDFydWZDSjUrWk1lZjkwdkhwd3hNK09hUHJ5TmwKICAgICAgICBFZERXN1lROGZ1QjVuUHFqd1VBcG1sWVlMSllsZDd2Sjc5RUl4L3NqZ2g2RytJRmltN3hSN1dpUUYvbkpldmZxCiAgICAgICAgdnpZTzdvci9HSUNiNmVad3ZQZHR5NzlIbVZlUHFFVGxEVTAwb3lvcFd5VHNZeVNZRFNIbi80ZG9UdXg4ditGLwogICAgICAgIFlleWJ2Z3FicmlIN2lTRjhIeHdFRmVEanJNdFVUSHNYQzM1REhGZU1DaEpveHN5S3Y0OEorYklHRndBUkFRQUIKICAgICAgICB0QzFKYm1aeVlVaHZkWE5sSUZCaFkydGhaMlZ5SUR4d1lXTnJZV2RsY2tCcGJtWnlZV2h2ZFhObExtTnZiVDZKCiAgICAgICAgQWxRRUV3RUtBRDRXSVFTaU5oNWtZM3c4VzBnQUY4WGd1SmFveGZjRDd3VUNaTHNXMlFJYkF3VUpBOEpuQUFVTAogICAgICAgIENRZ0hBZ1lWQ2drSUN3SUVGZ0lEQVFJZUFRSVhnQUFLQ1JEZ3VKYW94ZmNEN3diN0QvOWVuYnRPMURFUW4xUHQKICAgICAgICBoZ2t0SCtJcmJCZFlSSGs3MWlsMmhibm1BYm9Ma2sxYWsvYWFRWS9YUURKRmhyQTdqTWtQTE9DUmVvdEhpUW12CiAgICAgICAgMVVmcURjTTJlUTQveDBOOUYyRExVU2t1d3cxMTd2dHRVb0J4aXJCNzJwTzBUL2xkOW8zOVNITUMvRGZrNnk2aAogICAgICAgIHRUR3F4TGdoOGozRFN5TzVFRXJKTGEvM0J2TXFyNGlxYjNQVHdOZURSRWphdlFKaFhTdkVGanlBQ29vOWQ3cnMKICAgICAgICA3bGhDYmJTUGpnVGNHL1BDZnpMcjM3UXl6WGlUUi9Ud2ppd1ZkVGhkQ1MvQ0tuc29NOG5nSHhqWFlwSzdNNndnCiAgICAgICAgdHpBOEprSFpyNU1wa3JQR3JnUWV2aEpCTGtIUi9qY3NhYUJaTjdudzhhZUhjd3dNNC9DaEhJeVpkUTkxMDU5cAogICAgICAgIE9NYVltV21qUFFmcTFyT25BQXZBMXhXdytUWk56SGdXSXE0dnVzeDdPQnZyRnNWZVpOc3FkN09hNHBydFZXZzAKICAgICAgICA5MWNLWkpvL092Nm9wTS93RFdOMnlCbmttQkN3YVhwb0g1TkRRMjJiaG5HVEplSVdkZWk4VVNHcHZCa1R4QkkyCiAgICAgICAgWDMycHlPbVpEbjgxTDJ6TTJpb052Z1hJYjV1NXRqYjlOT2lBdDZvVzBHMHgwMGRncjNyNnB1OHFtTXdrQlZCQwogICAgICAgIHZXd0VtYXhRbmtUaG5iQWQ1N1ZiYXQ0Ly91RGNIRnBEYUJQcEZXZUNMMmRmRFNyUzlpaUs2SzFWa3ZHTG9YaDgKICAgICAgICBNcEpxam9kZHBmTmg0dXlmekt5TkUxZHJRMjltY3dmSWx6WG9QcmIwOVc2WkhwbSt0cWQ4TWs3MDd6d3NkRkdSCiAgICAgICAgcVJzeG10UG45SjFyZVlaaVZ1RTVHMjZmMWFLVFI3a0NEUVJrdXhiWkFSQUE0KzlrbjRzbUJYWmNNMHZGcTlSOAogICAgICAgIDI0WEtadFRhVm1Wb1ZKTVJRTTQ0cVdSK3MvUzBNenZiTzV1MGNTVlRoWTY1WXpNTHM5MjBVWTZ1R3BvUzJaWXcKICAgICAgICBJTWlwa2FCKzJGNkI4UjdWN25sL1NnYVhHYTJNZXhrQzd3dDZibEZiYXc3cGJ2SStpSTl3UzhCS0hnTUR6ZDBGCiAgICAgICAgVGpTcTl2ZGtWa2Y3eUkzaEV3bGxYN3pUNklMT3Zrbk5HYm9zMGRGSTkyY0JXUXMraVhQNTB4RFZpdDMrOW1DRAogICAgICAgIHJ1V1ZZazczbXZTRXpGY3VYQ3liS0o1VS9uelNRNzBKb1FtU1BjNTBSUWp1SEdkemwvWXpHRmFGbjV6SVo1cFAKICAgICAgICBrNVMrS1RZZWt6Y2lSa0h6YmVhNVBqK0E2S1ppbEtqNXlrQVJGencrQ1B4cXN1ZWpEa2k3QSthM20zV0dxK21tCiAgICAgICAgQWtsUTRZQmNvbHpOT3BnV2NsSVN1RTNkNWtndGFKQUNJZ3RlODdGNlFCQnNrOG9EQkZRQ25abW9PaXJsU2xiZgogICAgICAgIEp1RDZmVkNKdTJ6WTdUaE4xTzBvV1R3QWFOQXZNNTVDTFR2NnMzRm10UjkybG5sUURGdUorZmo4NjNjNnF4MTQKICAgICAgICBGdU80bU03ZXVTMDh3R2dWR205MXdBN2JZbDRhaHhDNlMyQkdCNUZ2a1pmekJCd2pzZm1VV0hBdTdWUlpKeGtYCiAgICAgICAgSnA2OTZPVGRSM1JmSTdJWjZPVzZ0R0VMaWpzd1diYlpYYjVYUldFVzk5dldPN05JSzZzT3ZoTUROcDliU011YgogICAgICAgIFhQM1BiUHhneVQwYm1zczB5d05Zd3VjbmZjbURYcVBWdTNHZHQ1M2F0MStoSzdtbG5RM3VVczVlVkVPSUhuSm0KICAgICAgICBmMXRyRGdnU1RFN2Zua3g2Q3psK2lNa0FFUUVBQVlrQ1BBUVlBUW9BSmhZaEJLSTJIbVJqZkR4YlNBQVh4ZUM0CiAgICAgICAgbHFqRjl3UHZCUUprdXhiWkFoc01CUWtEd21jQUFBb0pFT0M0bHFqRjl3UHY4U1FQL2pzUWZKQ1VIcmpwWDRmUAogICAgICAgIDBOdFZ5cWxDcnExT21MUDdCTHJYckN4b0FGUmI2NFlKVWRXazVQMzVrOXdqMkJRanBqY05qMmlrODBGb28wMkUKICAgICAgICB5YytQelcvNHR6VnZkeFJyRXpzT0ZtK21NUitsbFVIQUt6QmE2UUJ4SFQwb2ZMN3A1WFlUdU1ObllvK1BqVk1tCiAgICAgICAgalAzVEVKR1lYWW11aEdmYWFKWnBqTG1KRnFwNTl4Ly9kc01IZUxxVUNod2I2Q2c2RHVrQWloZUFzM1ArclhvMwogICAgICAgIHRCbkE0SkNDaVhSNy8vMFdlelJvU1BkYWxOZW00dnM4UFQ4N3NuSGJEbGlGTVZmOHcrZmtzSW5xdm90aVJESTQKICAgICAgICBRQnJCZnMzTmRlWlcvdG11cE9hWkpSekhEdnZLYmcvL082aXAxYVB2SUxXdlRETThLY1FDUUVTYVdrQ2JJMXVjCiAgICAgICAgcml6QU1ibFRCMmd5dzl5b2pDcFZDTUJYZGl6QXFxeWw1WlZydzQrWC9pMDlJc050OGhBOS81Ulk3djNjN1oyQwogICAgICAgIFh5MnhLV210TEk5bmxPU1N3VXhCNTY2STI5bFZLQkxVbVhtUWZuUklJSENpSkRYWUZEUC82TGZ2OSttaEVXVTgKICAgICAgICBxZWQzeGhwZU5TQUl6QStNVGxqdGlSbW9yeHBkZGlYYnRDYWZjUGwvSjNYMEIwN2ZjY0pad1pzQ1lDcHRMeTFjCiAgICAgICAgeXZWYU4rRUJtam9DcDNqdDZ3TGU0eGNscVUzQUN3ei84VEREbXRKN1VVZGw3TWRraXBRWjI3OEwya3BsNm82MQogICAgICAgIE1GMmZYRDdmWk1lWmZFdzZsdTBCRjVtWjAvY2gzSHhYZVpvWGlmNzlnMjV2Wm1TZFc5N3BjZWV3UGx2bEVURlEKICAgICAgICA1NXBNb3JReVVURVFDUTNFQ3pIWVNuTC9UbVc3CiAgICAgICAgPSswUmMKICAgICAgICAtLS0tLUVORCBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tCiAgICAgICJzb3VyY2UiOiAiZGViIFtzaWduZWQtYnk9JEtFWV9GSUxFXSBodHRwczovL3JlbGVhc2UtamFtbXkuaW5mcmFob3VzZS5jb20vICRSRUxFQVNFCiAgICAgICAgbWFpbiIKInBhY2thZ2VfdXBkYXRlIjogdHJ1ZQoicGFja2FnZXMiOgotICJtYWtlIgotICJnY2MiCi0gInB1cHBldC1jb2RlIgotICJpbmZyYWhvdXNlLXRvb2xraXQiCi0gImluZnJhaG91c2UtcHVwcGV0LWRhdGEiCiJwdXBwZXQiOgogICJjb2xsZWN0aW9uIjogInB1cHBldDgiCiAgImluc3RhbGwiOiB0cnVlCiAgImluc3RhbGxfdHlwZSI6ICJhaW8iCiAgInBhY2thZ2VfbmFtZSI6ICJwdXBwZXQtYWdlbnQiCiAgInN0YXJ0X3NlcnZpY2UiOiBmYWxzZQoicnVuY21kIjoKLSAiL29wdC9wdXBwZXRsYWJzL3B1cHBldC9iaW4vZ2VtIGluc3RhbGwganNvbiIKLSAiL29wdC9wdXBwZXRsYWJzL3B1cHBldC9iaW4vZ2VtIGluc3RhbGwgYXdzLXNkay1jb3JlIgotICIvb3B0L3B1cHBldGxhYnMvcHVwcGV0L2Jpbi9nZW0gaW5zdGFsbCBhd3Mtc2RrLXNlY3JldHNtYW5hZ2VyIgotICJpaC1wdXBwZXQgIC0tZW52aXJvbm1lbnQgcHJvZHVjdGlvbiAtLWVudmlyb25tZW50cGF0aCB7cm9vdF9kaXJlY3Rvcnl9L2Vudmlyb25tZW50cwogIC0tcm9vdC1kaXJlY3RvcnkgL29wdC9wdXBwZXQtY29kZSAtLWhpZXJhLWNvbmZpZyAvb3B0L2luZnJhaG91c2UtcHVwcGV0LWRhdGEvZW52aXJvbm1lbnRzL3Byb2R1Y3Rpb24vaGllcmEueWFtbAogIC0tbW9kdWxlLXBhdGgge3Jvb3RfZGlyZWN0b3J5fS9tb2R1bGVzIGFwcGx5IC9vcHQvcHVwcGV0LWNvZGUvZW52aXJvbm1lbnRzL3Byb2R1Y3Rpb24vbWFuaWZlc3RzL3NpdGUucHAiCiJ3cml0ZV9maWxlcyI6Ci0gImNvbnRlbnQiOiAiZXhwb3J0IEFXU19ERUZBVUxUX1JFR0lPTj11cy13ZXN0LTEiCiAgInBhdGgiOiAiL2V0Yy9wcm9maWxlLmQvYXdzLnNoIgogICJwZXJtaXNzaW9ucyI6ICIwNjQ0IgotICJjb250ZW50IjogfC0KICAgIFtkZWZhdWx0XQogICAgcmVnaW9uPXVzLXdlc3QtMQogICJwYXRoIjogIi9yb290Ly5hd3MvY29uZmlnIgogICJwZXJtaXNzaW9ucyI6ICIwNjAwIgotICJjb250ZW50IjogfAogICAgInB1cHBldF9lbnZpcm9ubWVudCI6ICJwcm9kdWN0aW9uIgogICAgInB1cHBldF9yb2xlIjogIndlYnNlcnZlciIKICAicGF0aCI6ICIvZXRjL3B1cHBldGxhYnMvZmFjdGVyL2ZhY3RzLmQvcHVwcGV0LnlhbWwiCiAgInBlcm1pc3Npb25zIjogIjA2NDQiCi0gImNvbnRlbnQiOiAie1wiaWgtcHVwcGV0XCI6e1wiZGVidWdcIjpmYWxzZSxcImVudmlyb25tZW50cGF0aFwiOlwie3Jvb3RfZGlyZWN0b3J5fS9lbnZpcm9ubWVudHNcIixcImhpZXJhLWNvbmZpZ1wiOlwiL29wdC9pbmZyYWhvdXNlLXB1cHBldC1kYXRhL2Vudmlyb25tZW50cy9wcm9kdWN0aW9uL2hpZXJhLnlhbWxcIixcIm1hbmlmZXN0XCI6XCIvb3B0L3B1cHBldC1jb2RlL2Vudmlyb25tZW50cy9wcm9kdWN0aW9uL21hbmlmZXN0cy9zaXRlLnBwXCIsXCJtb2R1bGUtcGF0aFwiOlwie3Jvb3RfZGlyZWN0b3J5fS9tb2R1bGVzXCIsXCJyb290LWRpcmVjdG9yeVwiOlwiL29wdC9wdXBwZXQtY29kZVwifX0iCiAgInBhdGgiOiAiL2V0Yy9wdXBwZXRsYWJzL2ZhY3Rlci9mYWN0cy5kL2loLXB1cHBldC5qc29uIgogICJwZXJtaXNzaW9ucyI6ICIwNjQ0IgotICJjb250ZW50IjogInt9IgogICJwYXRoIjogIi9ldGMvcHVwcGV0bGFicy9mYWN0ZXIvZmFjdHMuZC9jdXN0b20uanNvbiIKICAicGVybWlzc2lvbnMiOiAiMDY0NCIKDQotLU1JTUVCT1VOREFSWS0tDQo=" -> (known after apply)
        # (16 unchanged attributes hidden)

      + metadata_options {
          + http_tokens = "required"
        }

        # (4 unchanged blocks hidden)
    }

Plan: 0 to add, 2 to change, 0 to destroy.

─────────────────────────────────────────────────────────────────────────────

Saved the plan to: tf.plan

To perform exactly these actions, run the following command to apply:
    terraform apply "tf.plan"
